import java.util.*;

public class Solution {
    public String minRemoveToMakeValid(String s) {
        StringBuilder sb = new StringBuilder(s);
        Stack<Integer> stack = new Stack<>();
        Set<Integer> indexesToRemove = new HashSet<>();
        
        for (int i = 0; i < sb.length(); i++) {
            char c = sb.charAt(i);
            if (c == '(') {
                stack.push(i);
            } else if (c == ')') {
                if (!stack.isEmpty()) {
                    stack.pop();
                } else {
                    indexesToRemove.add(i);
                }
            }
        }
        
        // Add remaining '(' indices in stack to remove set
        while (!stack.isEmpty()) {
            indexesToRemove.add(stack.pop());
        }
        
        // Build result string without invalid parentheses
        StringBuilder result = new StringBuilder();
        for (int i = 0; i < sb.length(); i++) {
            if (!indexesToRemove.contains(i)) {
                result.append(sb.charAt(i));
            }
        }
        
        return result.toString();
    }
}
