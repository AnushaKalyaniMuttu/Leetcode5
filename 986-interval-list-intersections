class Solution {
    public int[][] intervalIntersection(int[][] A, int[][] B) {
        List<int[]> result = new ArrayList<>();
        int i = 0, j = 0;
        
        // Process both lists while there are intervals in both
        while (i < A.length && j < B.length) {
            // Find the intersection of A[i] and B[j]
            int start = Math.max(A[i][0], B[j][0]);
            int end = Math.min(A[i][1], B[j][1]);
            
            // If they intersect, add the intersection to result
            if (start <= end) {
                result.add(new int[] { start, end });
            }
            
            // Move the pointer for the interval that finishes first
            if (A[i][1] < B[j][1]) {
                i++;
            } else {
                j++;
            }
        }
        
        // Convert the list to an array and return it
        return result.toArray(new int[result.size()][]);
    }
}
