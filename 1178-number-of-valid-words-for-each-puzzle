import java.util.*;

class Solution {
    public List<Integer> findNumOfValidWords(String[] words, String[] puzzles) {
        Map<Integer, Integer> frequency = new HashMap<>();
        for (String word : words) {
            int mask = 0;
            for (char c : word.toCharArray()) {
                mask |= 1 << (c - 'a');
            }
            if (Integer.bitCount(mask) <= 7) {
                frequency.put(mask, frequency.getOrDefault(mask, 0) + 1);
            }
        }

        List<Integer> result = new ArrayList<>();
        for (String puzzle : puzzles) {
            int total = 0;
            int mask = 0;
            for (int i = 1; i < 7; i++) {
                mask |= 1 << (puzzle.charAt(i) - 'a');
            }
            int firstCharMask = 1 << (puzzle.charAt(0) - 'a');

            int subset = mask;
            do {
                int s = subset | firstCharMask;
                total += frequency.getOrDefault(s, 0);
                subset = (subset - 1) & mask;
            } while (subset != mask);

            result.add(total);
        }
        return result;
    }
}
