public class Solution {
    public int rob(int[] nums) {
        // Base cases
        if (nums == null || nums.length == 0) return 0;
        if (nums.length == 1) return nums[0];
        
        // dp array to store the maximum money robbed up to the current house
        int[] dp = new int[nums.length];
        
        // Initializing base cases
        dp[0] = nums[0];
        dp[1] = Math.max(nums[0], nums[1]);
        
        // Fill the dp array using the recurrence relation
        for (int i = 2; i < nums.length; i++) {
            dp[i] = Math.max(dp[i - 1], dp[i - 2] + nums[i]);
        }
        
        // The last element will contain the answer
        return dp[nums.length - 1];
    }
}
