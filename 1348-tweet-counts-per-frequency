import java.util.*;

public class TweetCounts {

    private Map<String, List<Integer>> map;
    
    public TweetCounts() {
        map = new HashMap<>();
    }
    
    public void recordTweet(String tweetName, int time) {
        map.computeIfAbsent(tweetName, k -> new ArrayList<>()).add(time);
    }
    
    public List<Integer> getTweetCountsPerFrequency(String freq, String tweetName, int startTime, int endTime) {
        int interval = 0;
        if (freq.equals("minute")) {
            interval = 60;
        } else if (freq.equals("hour")) {
            interval = 3600;
        } else if (freq.equals("day")) {
            interval = 86400;
        }
        
        List<Integer> times = map.getOrDefault(tweetName, new ArrayList<>());
        Collections.sort(times);
        
        int size = ((endTime - startTime) / interval) + 1;
        List<Integer> result = new ArrayList<>(Collections.nCopies(size, 0));
        
        for (int time : times) {
            if (time >= startTime && time <= endTime) {
                int idx = (time - startTime) / interval;
                result.set(idx, result.get(idx) + 1);
            }
        }
        
        return result;
    }
}

/**
 * Your TweetCounts object will be instantiated and called as such:
 * TweetCounts obj = new TweetCounts();
 * obj.recordTweet(tweetName,time);
 * List<Integer> param_2 = obj.getTweetCountsPerFrequency(freq,tweetName,startTime,endTime);
 */
