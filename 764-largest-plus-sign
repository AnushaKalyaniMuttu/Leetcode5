import java.util.*;

public class Solution {
    public int orderOfLargestPlusSign(int n, int[][] mines) {
        int[][] grid = new int[n][n];
        for (int[] row : grid) Arrays.fill(row, n);

        Set<Integer> banned = new HashSet<>();
        for (int[] mine : mines) {
            banned.add(mine[0] * n + mine[1]);
        }

        for (int i = 0; i < n; i++) {
            int count = 0;
            // left to right
            for (int j = 0; j < n; j++) {
                count = banned.contains(i * n + j) ? 0 : count + 1;
                grid[i][j] = Math.min(grid[i][j], count);
            }

            count = 0;
            // right to left
            for (int j = n - 1; j >= 0; j--) {
                count = banned.contains(i * n + j) ? 0 : count + 1;
                grid[i][j] = Math.min(grid[i][j], count);
            }
        }

        for (int j = 0; j < n; j++) {
            int count = 0;
            // top to bottom
            for (int i = 0; i < n; i++) {
                count = banned.contains(i * n + j) ? 0 : count + 1;
                grid[i][j] = Math.min(grid[i][j], count);
            }

            count = 0;
            // bottom to top
            for (int i = n - 1; i >= 0; i--) {
                count = banned.contains(i * n + j) ? 0 : count + 1;
                grid[i][j] = Math.min(grid[i][j], count);
            }
        }

        int maxOrder = 0;
        for (int[] row : grid) {
            for (int cell : row) {
                maxOrder = Math.max(maxOrder, cell);
            }
        }

        return maxOrder;
    }
}
