import java.util.*;

public class FrequencySort {
    public String frequencySort(String s) {
        // Step 1: Count frequency of each character
        Map<Character, Integer> freqMap = new HashMap<>();
        for (char c : s.toCharArray()) {
            freqMap.put(c, freqMap.getOrDefault(c, 0) + 1);
        }

        // Step 2: Use a max heap (PriorityQueue) to sort characters by frequency
        PriorityQueue<Character> maxHeap = new PriorityQueue<>((a, b) -> freqMap.get(b) - freqMap.get(a));
        maxHeap.addAll(freqMap.keySet());

        // Step 3: Build the result string
        StringBuilder result = new StringBuilder();
        while (!maxHeap.isEmpty()) {
            char c = maxHeap.poll();
            result.append(String.valueOf(c).repeat(freqMap.get(c))); // Java 11+
        }

        return result.toString();
    }

    public static void main(String[] args) {
        FrequencySort solution = new FrequencySort();
        System.out.println(solution.frequencySort("tree"));  // Output: "eert"
        System.out.println(solution.frequencySort("cccaaa")); // Output: "aaaccc"
    }
}
