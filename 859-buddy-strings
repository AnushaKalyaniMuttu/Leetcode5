public class Solution {
    public boolean buddyStrings(String s, String goal) {
        // Step 1: Check if lengths are equal
        if (s.length() != goal.length()) {
            return false;
        }

        // Step 2: If strings are equal, check for duplicate characters
        if (s.equals(goal)) {
            Set<Character> seen = new HashSet<>();
            for (char c : s.toCharArray()) {
                if (!seen.add(c)) {
                    return true; // Found duplicate character
                }
            }
            return false; // No duplicates found
        }

        // Step 3: Identify differing positions
        List<Integer> diff = new ArrayList<>();
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) != goal.charAt(i)) {
                diff.add(i);
            }
        }

        // Step 4: Check if exactly two positions differ and can be swapped
        return diff.size() == 2 &&
               s.charAt(diff.get(0)) == goal.charAt(diff.get(1)) &&
               s.charAt(diff.get(1)) == goal.charAt(diff.get(0));
    }
}
