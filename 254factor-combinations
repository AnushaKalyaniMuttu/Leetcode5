import java.util.*;

public class Solution {
    public List<List<Integer>> getFactors(int n) {
        List<List<Integer>> result = new ArrayList<>();
        findFactors(n, 2, new ArrayList<>(), result);
        return result;
    }

    private void findFactors(int n, int start, List<Integer> current, List<List<Integer>> result) {
        if (n == 1) {
            if (current.size() > 1) {  // Exclude the trivial factor of 1
                result.add(new ArrayList<>(current));
            }
            return;
        }

        for (int i = start; i <= Math.sqrt(n); i++) {
            if (n % i == 0) {
                current.add(i);
                findFactors(n / i, i, current, result);  // Don't reduce `start` to avoid duplicates
                current.remove(current.size() - 1);  // Backtrack
            }
        }
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        int n = 12;
        List<List<Integer>> factors = solution.getFactors(n);
        
        for (List<Integer> combination : factors) {
            System.out.println(combination);
        }
    }
}
