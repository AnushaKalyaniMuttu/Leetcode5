class Solution {
    private String ans;

    public String findLexSmallestString(String s, int a, int b) {
        ans = s;
        dfs(s, a, b, new HashSet<>());
        return ans;
    }

    private void dfs(String s, int a, int b, Set<String> seen) {
        if (seen.contains(s)) return;
        seen.add(s);
        if (s.compareTo(ans) < 0) ans = s;

        dfs(add(s, a), a, b, seen);
        dfs(rotate(s, b), a, b, seen);
    }

    private String add(String s, int a) {
        StringBuilder sb = new StringBuilder(s);
        for (int i = 1; i < sb.length(); i += 2) {
            char c = (char) ((sb.charAt(i) - '0' + a) % 10 + '0');
            sb.setCharAt(i, c);
        }
        return sb.toString();
    }

    private String rotate(String s, int b) {
        int n = s.length();
        return s.substring(n - b) + s.substring(0, n - b);
    }
}
