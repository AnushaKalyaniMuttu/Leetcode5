class Solution {
    private static final int MOD = 1337;

    public int superPow(int a, int[] b) {
        a %= MOD;
        return superPowHelper(a, b, b.length - 1);
    }

    private int superPowHelper(int a, int[] b, int index) {
        if (index < 0) {
            return 1;
        }
        // Calculate the current power
        int lastDigit = b[index];
        int part1 = modPow(a, lastDigit);
        int part2 = modPow(superPowHelper(a, b, index - 1), 10);
        return (part1 * part2) % MOD;
    }

    private int modPow(int x, int y) {
        int result = 1;
        x %= MOD;
        for (int i = 0; i < y; i++) {
            result = (result * x) % MOD;
        }
        return result;
    }
}
