public class MaximumNestingDepthOfTheParentheses {
    public int maxDepth(String s) {
        int cur = 0;
        int max = 0;
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (c == '(') {
                cur++;
                if (cur > max) max = cur;
            } else if (c == ')') {
                // assuming valid parentheses string per problem constraints
                cur--;
            }
        }
        return max;
    }

    // quick main to test
    public static void main(String[] args) {
        MaximumNestingDepthOfTheParentheses solver = new MaximumNestingDepthOfTheParentheses();
        System.out.println(solver.maxDepth("(1+(2*3)+((8)/4))+1")); // 3
        System.out.println(solver.maxDepth("(1)+((2))+(((3)))"));    // 3
        System.out.println(solver.maxDepth("1+(2*3)/(2-1)"));       // 1
    }
}
