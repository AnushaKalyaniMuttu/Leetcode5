class Solution {
    public int surfaceArea(int[][] grid) {
        int n = grid.length;
        int surfaceArea = 0;

        // Iterate over each cell in the grid
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                int height = grid[i][j];

                // Add top and bottom surface area
                if (height > 0) {
                    surfaceArea += 2;
                }

                // Add side surface area
                if (i > 0) {
                    surfaceArea += Math.max(height - grid[i - 1][j], 0);
                } else {
                    surfaceArea += height;
                }

                if (j > 0) {
                    surfaceArea += Math.max(height - grid[i][j - 1], 0);
                } else {
                    surfaceArea += height;
                }

                if (i < n - 1) {
                    surfaceArea += Math.max(height - grid[i + 1][j], 0);
                } else {
                    surfaceArea += height;
                }

                if (j < n - 1) {
                    surfaceArea += Math.max(height - grid[i][j + 1], 0);
                } else {
                    surfaceArea += height;
                }
            }
        }

        return surfaceArea;
    }
}
