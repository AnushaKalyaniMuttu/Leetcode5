 import java.util.*;

public class Solution {
    public boolean isPossible(int[] nums) {
        Map<Integer, Integer> freq = new HashMap<>(); // Count occurrences of each number
        Map<Integer, Integer> need = new HashMap<>(); // Tracks sequences that need a number
        
        for (int num : nums) {
            freq.put(num, freq.getOrDefault(num, 0) + 1);
        }
        
        for (int num : nums) {
            if (freq.get(num) == 0) continue; // Already used in a sequence
            
            if (need.getOrDefault(num, 0) > 0) { // Can extend an existing sequence
                need.put(num, need.get(num) - 1);
                need.put(num + 1, need.getOrDefault(num + 1, 0) + 1);
            } else if (freq.getOrDefault(num + 1, 0) > 0 && freq.getOrDefault(num + 2, 0) > 0) { // Start a new sequence
                freq.put(num + 1, freq.get(num + 1) - 1);
                freq.put(num + 2, freq.get(num + 2) - 1);
                need.put(num + 3, need.getOrDefault(num + 3, 0) + 1);
            } else {
                return false; // Can't be part of a valid sequence
            }
            
            freq.put(num, freq.get(num) - 1);
        }
        return true;
    }

 
}
