class Solution {
    private static final int MOD = 1_000_000_007;

    public int[] pathsWithMaxScore(List<String> board) {
        int n = board.size();
        long[][] score = new long[n][n];
        long[][] ways = new long[n][n];
        ways[n-1][n-1] = 1;  // start from 'S'
        
        for (int i = n-1; i >= 0; --i) {
            for (int j = n-1; j >= 0; --j) {
                if (ways[i][j] == 0) continue;
                for (int[] d : new int[][]{{-1,0},{0,-1},{-1,-1}}) {
                    int x = i + d[0], y = j + d[1];
                    if (x < 0 || y < 0) continue;
                    char c = board.get(x).charAt(y);
                    if (c == 'X') continue;
                    long val = score[i][j] + (c != 'E' ? c - '0' : 0);
                    if (val > score[x][y]) {
                        score[x][y] = val;
                        ways[x][y] = ways[i][j];
                    } else if (val == score[x][y]) {
                        ways[x][y] = (ways[x][y] + ways[i][j]) % MOD;
                    }
                }
            }
        }
        
        return new int[]{(int)score[0][0], (int)ways[0][0]};
    }
}
