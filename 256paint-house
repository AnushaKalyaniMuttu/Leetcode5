public class Solution {
    public int minCost(int[][] costs) {
        if (costs == null || costs.length == 0) {
            return 0;
        }
        
        int n = costs.length;
        
        // Starting from the second-to-last house, calculate the minimum cost for each color
        for (int i = n - 2; i >= 0; i--) {
            // For each color, pick the minimum cost from the other two colors for the next house
            costs[i][0] += Math.min(costs[i + 1][1], costs[i + 1][2]);
            costs[i][1] += Math.min(costs[i + 1][0], costs[i + 1][2]);
            costs[i][2] += Math.min(costs[i + 1][0], costs[i + 1][1]);
        }
        
        // The result is the minimum cost for the first house, considering all 3 colors
        return Math.min(costs[0][0], Math.min(costs[0][1], costs[0][2]));
    }
}
