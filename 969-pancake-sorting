import java.util.ArrayList;
import java.util.List;

public class Solution {
    public List<Integer> pancakeSort(int[] A) {
        List<Integer> flips = new ArrayList<>();
        int n = A.length;

        for (int size = n; size > 1; size--) {
            // Find the index of the next largest number
            int maxIndex = findMaxIndex(A, size);

            if (maxIndex == size - 1) continue; // Already in correct position

            // Bring the largest number to the front if it's not already there
            if (maxIndex > 0) {
                flip(A, maxIndex + 1);
                flips.add(maxIndex + 1);
            }

            // Move the largest number to its correct position
            flip(A, size);
            flips.add(size);
        }

        return flips;
    }

    private int findMaxIndex(int[] A, int size) {
        int maxIndex = 0;
        for (int i = 1; i < size; i++) {
            if (A[i] > A[maxIndex]) {
                maxIndex = i;
            }
        }
        return maxIndex;
    }

    private void flip(int[] A, int k) {
        int left = 0, right = k - 1;
        while (left < right) {
            int temp = A[left];
            A[left] = A[right];
            A[right] = temp;
            left++;
            right--;
        }
    }
}
