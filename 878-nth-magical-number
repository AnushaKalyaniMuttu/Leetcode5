class Solution {
    public int nthMagicalNumber(int n, int a, int b) {
        long mod = 1_000_000_007;
        long lcm = lcm(a, b);
        long low = 0, high = (long) 1e18;
        
        while (low < high) {
            long mid = (low + high) / 2;
            long count = mid / a + mid / b - mid / lcm;
            if (count < n) {
                low = mid + 1;
            } else {
                high = mid;
            }
        }

        return (int) (low % mod);
    }

    private long gcd(long a, long b) {
        return b == 0 ? a : gcd(b, a % b);
    }

    private long lcm(long a, long b) {
        return a * b / gcd(a, b);
    }
}
