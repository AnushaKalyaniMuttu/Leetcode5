import java.util.Arrays;

public class Solution {
    public int threeSumSmaller(int[] nums, int target) {
        Arrays.sort(nums); // Sort the array to use the two-pointer technique
        int count = 0;

        for (int i = 0; i < nums.length - 2; i++) {
            int left = i + 1;
            int right = nums.length - 1;

            // Avoid duplicates
            if (i > 0 && nums[i] == nums[i - 1]) continue;

            while (left < right) {
                int sum = nums[i] + nums[left] + nums[right];
                
                // If the sum is smaller than the target, all triplets between left and right are valid
                if (sum < target) {
                    count += (right - left); // All combinations between left and right are valid
                    left++; // Move the left pointer to the right
                } else {
                    right--; // Otherwise, move the right pointer to the left
                }
            }
        }
        return count;
    }
}
