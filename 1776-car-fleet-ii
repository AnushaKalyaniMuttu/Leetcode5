class Solution {
    public double[] getCollisionTimes(int[][] cars) {
        int n = cars.length;
        double[] res = new double[n];
        Arrays.fill(res, -1.0);
        Stack<Integer> stack = new Stack<>(); // store indices of cars
        
        for (int i = n - 1; i >= 0; i--) {
            int pos = cars[i][0], speed = cars[i][1];
            
            while (!stack.isEmpty()) {
                int j = stack.peek();
                int posJ = cars[j][0], speedJ = cars[j][1];
                
                // If current car is slower or same speed, it will never catch up
                if (speed <= speedJ) {
                    stack.pop();
                    continue;
                }
                
                double time = (double)(posJ - pos) / (speed - speedJ);
                
                // If front car collides sooner, ignore it
                if (res[j] != -1 && time >= res[j]) {
                    stack.pop();
                    continue;
                }
                
                res[i] = time;
                break;
            }
            
            stack.push(i);
        }
        
        return res;
    }
}
