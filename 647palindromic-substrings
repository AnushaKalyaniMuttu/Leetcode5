class Solution {
    public int countSubstrings(String s) {
        int count = 0;
        int n = s.length();
        
        // Consider each index as the center of a palindrome.
        for (int i = 0; i < n; i++) {
            // Count odd-length palindromes (single character center)
            count += expandFromCenter(s, i, i);
            // Count even-length palindromes (adjacent characters as center)
            count += expandFromCenter(s, i, i + 1);
        }
        
        return count;
    }
    
    // Helper function to count palindromes expanding outwards from the center.
    private int expandFromCenter(String s, int left, int right) {
        int count = 0;
        while (left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
            count++;   // Found a palindrome.
            left--;
            right++;
        }
        return count;
    }
}
