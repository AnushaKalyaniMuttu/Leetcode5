class Solution {
    public int countSubstrings(String s, String t) {
        int n = s.length(), m = t.length();
        int ans = 0;

        // dp[i][j] = length of longest suffix ending at s[i-1], t[j-1] that are equal
        int[][] dp = new int[n + 1][m + 1];

        // diff[i][j] = number of substrings ending at s[i-1], t[j-1] that differ by exactly one char
        int[][] diff = new int[n + 1][m + 1];

        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= m; j++) {
                if (s.charAt(i - 1) == t.charAt(j - 1)) {
                    dp[i][j] = dp[i - 1][j - 1] + 1;
                    diff[i][j] = diff[i - 1][j - 1];
                } else {
                    dp[i][j] = 0;
                    diff[i][j] = dp[i - 1][j - 1] + 1;
                }
                ans += diff[i][j];
            }
        }

        return ans;
    }
}
