class Solution {
    public int concatenatedBinary(int n) {
        final int MOD = 1_000_000_007;
        long ans = 0;
        int bitLength = 0;

        for (int i = 1; i <= n; i++) {
            // check if i is a power of two: that means new bit length
            if ((i & (i - 1)) == 0) {
                bitLength++;
            }
            // shift ans by bitLength bits, then add i
            ans = ((ans << bitLength) % MOD + i) % MOD;
        }

        return (int) ans;
    }
}
