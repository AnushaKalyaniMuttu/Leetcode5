class Solution {
  public int findLengthOfShortestSubarray(int[] arr) {
        int n = arr.length;
        int left = 0;

        // Find longest non-decreasing prefix
        while (left + 1 < n && arr[left] <= arr[left + 1]) {
            left++;
        }

        if (left == n - 1) return 0; // Already non-decreasing

        int right = n - 1;
        // Find longest non-decreasing suffix
        while (right > 0 && arr[right - 1] <= arr[right]) {
            right--;
        }

        // Try removing prefix or suffix
        int result = Math.min(n - left - 1, right);

        // Try to merge prefix and suffix
        int i = 0;
        while (i <= left) {
            while (right < n && arr[right] < arr[i]) {
                right++;
            }
            if (right < n) {
                result = Math.min(result, right - i - 1);
            }
            i++;
        }

        return result;
    }
}
