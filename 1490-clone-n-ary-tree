/* Definition for a Node. */
class Node {
    public int val;
    public List<Node> children;
    public Node() {}
    public Node(int _val) { val = _val; children = new ArrayList<>(); }
    public Node(int _val, List<Node> _children) { val = _val; children = _children; }
}

class Solution {
    private Map<Node, Node> cloned = new HashMap<>();

    public Node cloneTree(Node root) {
        if (root == null) return null;
        if (cloned.containsKey(root)) return cloned.get(root);

        Node copy = new Node(root.val, new ArrayList<>());
        cloned.put(root, copy);

        for (Node child : root.children) {
            copy.children.add(cloneTree(child));
        }
        return copy;
    }
}
