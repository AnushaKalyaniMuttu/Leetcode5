import java.util.*;

class Solution {
    public int numOfMinutes(int n, int headID, int[] manager, int[] informTime) {
        // Build adjacency list for employees reporting structure
        List<List<Integer>> graph = new ArrayList<>();
        for (int i = 0; i < n; i++) {
            graph.add(new ArrayList<>());
        }
        for (int i = 0; i < n; i++) {
            if (manager[i] != -1) {
                graph.get(manager[i]).add(i);
            }
        }

        // DFS to find max time to inform all employees
        return dfs(headID, graph, informTime);
    }

    private int dfs(int manager, List<List<Integer>> graph, int[] informTime) {
        int maxTime = 0;
        for (int subordinate : graph.get(manager)) {
            maxTime = Math.max(maxTime, dfs(subordinate, graph, informTime));
        }
        return informTime[manager] + maxTime;
    }
}
