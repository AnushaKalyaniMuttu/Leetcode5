class Solution {
  public int maxSumRangeQuery(int[] nums, int[][] requests) {
        int n = nums.length;
        int[] freq = new int[n];

        // Calculate frequency of each index in all requests using prefix sum
        for (int[] req : requests) {
            freq[req[0]]++;
            if (req[1] + 1 < n) {
                freq[req[1] + 1]--;
            }
        }

        // Prefix sum to compute total frequency per index
        for (int i = 1; i < n; i++) {
            freq[i] += freq[i - 1];
        }

        // Sort nums and frequency arrays
        Arrays.sort(nums);
        Arrays.sort(freq);

        long res = 0, mod = 1_000_000_007;

        // Multiply corresponding largest numbers with highest frequencies
        for (int i = 0; i < n; i++) {
            res = (res + (long) nums[i] * freq[i]) % mod;
        }

        return (int) res;
    }
}
