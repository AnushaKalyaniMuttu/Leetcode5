import java.util.*;

class Solution {
    Map<Integer, Integer> memo = new HashMap<>();

    public int integerReplacement(int n) {
        return helper(n);
    }

    private int helper(long n) { // Use long to prevent overflow for n = Integer.MAX_VALUE
        if (n == 1) return 0;
        if (memo.containsKey((int) n)) return memo.get((int) n);

        int steps;
        if (n % 2 == 0) {
            steps = 1 + helper(n / 2);
        } else {
            steps = 1 + Math.min(helper(n + 1), helper(n - 1));
        }

        memo.put((int) n, steps);
        return steps;
    }
}
