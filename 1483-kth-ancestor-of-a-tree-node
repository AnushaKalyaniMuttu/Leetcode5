class TreeAncestor {
    int[][] dp;
    int maxPow;
    
    public TreeAncestor(int n, int[] parent) {
        maxPow = 1;
        while ((1 << maxPow) <= n) maxPow++;
        dp = new int[n][maxPow];
        
        for (int i = 0; i < n; i++) {
            dp[i][0] = parent[i];
        }
        
        for (int j = 1; j < maxPow; j++) {
            for (int i = 0; i < n; i++) {
                int prev = dp[i][j - 1];
                dp[i][j] = (prev == -1) ? -1 : dp[prev][j - 1];
            }
        }
    }
    
    public int getKthAncestor(int node, int k) {
        for (int i = 0; i < maxPow && node != -1; i++) {
            if ((k & (1 << i)) != 0) {
                node = dp[node][i];
            }
        }
        return node;
    }
}

/**
 * Your TreeAncestor object will be instantiated and called as such:
 * TreeAncestor obj = new TreeAncestor(n, parent);
 * int param_1 = obj.getKthAncestor(node,k);
 */
