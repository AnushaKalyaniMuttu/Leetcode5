class Solution {
    public boolean circularArrayLoop(int[] nums) {
        int n = nums.length;
        
        for (int i = 0; i < n; i++) {
            int slow = i, fast = i;
            boolean isForward = nums[i] > 0; // Check direction
            
            while (true) {
                slow = nextIndex(nums, slow, isForward);
                if (slow == -1) break;

                fast = nextIndex(nums, fast, isForward);
                if (fast == -1) break;
                fast = nextIndex(nums, fast, isForward);
                if (fast == -1) break;

                if (slow == fast) return true;
            }
        }

        return false;
    }

    private int nextIndex(int[] nums, int index, boolean isForward) {
        boolean direction = nums[index] > 0;
        if (direction != isForward) return -1; // Different direction

        int next = (index + nums[index]) % nums.length;
        if (next < 0) next += nums.length;

        return next == index ? -1 : next; // Self-loop check
    }
}
