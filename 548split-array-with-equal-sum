class Solution {
    public boolean splitArray(int[] nums) {
        int n = nums.length;
        if (n < 7) return false;

        int[] prefixSum = new int[n];
        prefixSum[0] = nums[0];
        for (int i = 1; i < n; i++) {
            prefixSum[i] = prefixSum[i - 1] + nums[i];
        }

        for (int j = 3; j < n - 3; j++) {
            HashSet<Integer> set = new HashSet<>();
            for (int i = 1; i < j - 1; i++) {
                if (prefixSum[i - 1] == prefixSum[j - 1] - prefixSum[i]) {
                    set.add(prefixSum[i - 1]);
                }
            }
            for (int k = j + 2; k < n - 1; k++) {
                if (prefixSum[k - 1] - prefixSum[j] == prefixSum[n - 1] - prefixSum[k] &&
                    set.contains(prefixSum[k - 1] - prefixSum[j])) {
                    return true;
                }
            }
        }

        return false;
    }
}
