class Solution {
    private static final int MOD = 1_000_000_007;

    public int maxProductPath(int[][] grid) {
        int m = grid.length, n = grid[0].length;
        long[][] max = new long[m][n];
        long[][] min = new long[m][n];

        max[0][0] = min[0][0] = grid[0][0];

        // Fill first row
        for (int j = 1; j < n; j++) {
            max[0][j] = min[0][j] = max[0][j - 1] * grid[0][j];
        }

        // Fill first column
        for (int i = 1; i < m; i++) {
            max[i][0] = min[i][0] = max[i - 1][0] * grid[i][0];
        }

        // Fill the rest of the grid
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                long val = grid[i][j];

                long a = Math.max(max[i - 1][j] * val, min[i - 1][j] * val);
                long b = Math.max(max[i][j - 1] * val, min[i][j - 1] * val);
                max[i][j] = Math.max(a, b);

                a = Math.min(max[i - 1][j] * val, min[i - 1][j] * val);
                b = Math.min(max[i][j - 1] * val, min[i][j - 1] * val);
                min[i][j] = Math.min(a, b);
            }
        }

        return max[m - 1][n - 1] < 0 ? -1 : (int)(max[m - 1][n - 1] % MOD);
    }
}
