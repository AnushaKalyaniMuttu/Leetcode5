class Solution {
    public int nextGreaterElement(int n) {
        char[] digits = Integer.toString(n).toCharArray();
        int i = digits.length - 2;
        
        while (i >= 0 && digits[i] >= digits[i + 1]) {
            i--;
        }
        
        if (i == -1) return -1;
        
        int j = digits.length - 1;
        while (digits[j] <= digits[i]) {
            j--;
        }
        
        swap(digits, i, j);
        reverse(digits, i + 1, digits.length - 1);
        
        long nextNum = Long.parseLong(new String(digits));
        return (nextNum > Integer.MAX_VALUE) ? -1 : (int) nextNum;
    }
    
    private void swap(char[] digits, int i, int j) {
        char temp = digits[i];
        digits[i] = digits[j];
        digits[j] = temp;
    }
    
    private void reverse(char[] digits, int start, int end) {
        while (start < end) {
            swap(digits, start++, end--);
        }
    }
}
