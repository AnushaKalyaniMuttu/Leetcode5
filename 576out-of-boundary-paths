class Solution {
    private static final int MOD = 1_000_000_007;

    public int findPaths(int m, int n, int maxMove, int startRow, int startColumn) {
        int[][][] dp = new int[m][n][maxMove + 1];

        for (int moves = 1; moves <= maxMove; moves++) {
            for (int i = 0; i < m; i++) {
                for (int j = 0; j < n; j++) {
                    long paths = 0;

                    if (i == 0) paths++;
                    else paths += dp[i - 1][j][moves - 1];

                    if (i == m - 1) paths++;
                    else paths += dp[i + 1][j][moves - 1];

                    if (j == 0) paths++;
                    else paths += dp[i][j - 1][moves - 1];

                    if (j == n - 1) paths++;
                    else paths += dp[i][j + 1][moves - 1];

                    dp[i][j][moves] = (int) (paths % MOD);
                }
            }
        }

        return dp[startRow][startColumn][maxMove];
    }
}
