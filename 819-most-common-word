import java.util.*;

class Solution {
    public String mostCommonWord(String paragraph, String[] banned) {
        // Step 1: Convert banned words array to a HashSet for O(1) lookup
        Set<String> bannedSet = new HashSet<>(Arrays.asList(banned));
        
        // Step 2: Normalize the paragraph by converting to lowercase and replacing non-alphabetic characters with spaces
        String normalizedParagraph = paragraph.replaceAll("[^a-zA-Z]", " ").toLowerCase();
        
        // Step 3: Split the normalized paragraph into words
        String[] words = normalizedParagraph.split("\\s+");
        
        // Step 4: Count the frequency of each word that is not banned
        Map<String, Integer> wordCount = new HashMap<>();
        for (String word : words) {
            if (!word.isEmpty() && !bannedSet.contains(word)) {
                wordCount.put(word, wordCount.getOrDefault(word, 0) + 1);
            }
        }
        
        // Step 5: Find the word with the highest frequency
        String mostCommonWord = "";
        int maxCount = 0;
        for (Map.Entry<String, Integer> entry : wordCount.entrySet()) {
            if (entry.getValue() > maxCount) {
                mostCommonWord = entry.getKey();
                maxCount = entry.getValue();
            }
        }
        
        return mostCommonWord;
    }
}
